from plptest import *
import os

TestConfig = c = {}
def get_test(name, flags):
  return Test(
    name = 'multiple_%s' % name,
    commands = [
      Shell('clean', 'make %s clean build_dir_ext=%s' % (flags, name)),
      Shell('build', 'make %s all build_dir_ext=%s' % (flags, name)),
      Shell('run',   'make %s run build_dir_ext=%s' % (flags, name))
    ],
    timeout=2000000
  )
  
c['tests'] = [ ]

def append_for_ram(name):
  c['tests'].append(get_test(name.lower() + '_sync_read',        'RAM_TYPE=%s QUICK=1 READ=1 SYNC=1' % name))
  c['tests'].append(get_test(name.lower() + '_sync_write',       'RAM_TYPE=%s QUICK=1 WRITE=1 SYNC=1' % name))
  c['tests'].append(get_test(name.lower() + '_async_read',       'RAM_TYPE=%s QUICK=1 READ=1 ASYNC=1' % name))
  c['tests'].append(get_test(name.lower() + '_async_write',      'RAM_TYPE=%s QUICK=1 WRITE=1 ASYNC=1' % name))
  c['tests'].append(get_test(name.lower() + '_sync_read_2d',     'RAM_TYPE=%s QUICK=1 READ=1 SYNC_2D=1' % name))
  c['tests'].append(get_test(name.lower() + '_sync_write_2d',    'RAM_TYPE=%s QUICK=1 WRITE=1 SYNC_2D=1' % name))
  c['tests'].append(get_test(name.lower() + '_async_read_2d',    'RAM_TYPE=%s QUICK=1 READ=1 ASYNC_2D=1' % name))
  c['tests'].append(get_test(name.lower() + '_async_write_2d',   'RAM_TYPE=%s QUICK=1 WRITE=1 ASYNC_2D=1' % name))

  c['tests'].append(get_test(name.lower() + '_cluster_sync_read',      'RAM_TYPE=%s USE_CLUSTER=1 QUICK=1 READ=1 SYNC=1' % name))
  c['tests'].append(get_test(name.lower() + '_cluster_sync_write',     'RAM_TYPE=%s USE_CLUSTER=1 QUICK=1 WRITE=1 SYNC=1' % name))
  c['tests'].append(get_test(name.lower() + '_cluster_async_read',     'RAM_TYPE=%s USE_CLUSTER=1 QUICK=1 READ=1 ASYNC=1' % name))
  c['tests'].append(get_test(name.lower() + '_cluster_async_write',    'RAM_TYPE=%s USE_CLUSTER=1 QUICK=1 WRITE=1 ASYNC=1' % name))
  c['tests'].append(get_test(name.lower() + '_cluster_sync_read_2d',   'RAM_TYPE=%s USE_CLUSTER=1 QUICK=1 READ=1 SYNC_2D=1' % name))
  c['tests'].append(get_test(name.lower() + '_cluster_sync_write_2d',  'RAM_TYPE=%s USE_CLUSTER=1 QUICK=1 WRITE=1 SYNC_2D=1' % name))
  c['tests'].append(get_test(name.lower() + '_cluster_async_read_2d',  'RAM_TYPE=%s USE_CLUSTER=1 QUICK=1 READ=1 ASYNC_2D=1' % name))
  c['tests'].append(get_test(name.lower() + '_cluster_async_write_2d', 'RAM_TYPE=%s USE_CLUSTER=1 QUICK=1 WRITE=1 ASYNC_2D=1' % name))

append_for_ram('SPIRAM')
append_for_ram('HYPERRAM')
